{"version":3,"sources":["jquery.bootstrap-dropdown-hover.js"],"names":["$","window","document","undefined","_hideTimeoutHandler","pluginName","defaults","clickBehavior","hideTimeout","_hardOpened","_touchstartDetected","_mouseDetected","BootstrapDropdownHover","element","options","this","settings","extend","_defaults","_name","init","prototype","dropdown","setClickBehavior","setHideTimeout","one","parent","on","is","clearTimeout","hasClass","setTimeout","e","preventDefault","stopImmediatePropagation","value","destroy","off","data","fn","returns","args","arguments","contains","each","index","item","bootstrapDropdownHover","instance","apply","Array","slice","call","jQuery"],"mappings":"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","file":"jquery.bootstrap-dropdown-hover.min.js","sourcesContent":["/*\r\n *  Bootstrap Dropdown Hover - v1.0.4\r\n *  Open dropdown menus on mouse hover, the proper way.\r\n *  http://www.virtuosoft.eu/code/bootstrap-dropdown-hover/\r\n *\r\n *  Made by István Ujj-Mészáros\r\n *  Under Apache License v2.0 License\r\n */\r\n;(function ($, window, document, undefined) {\r\n  var pluginName = 'bootstrapDropdownHover',\r\n      defaults = {\r\n        clickBehavior: 'sticky',  // Click behavior setting:\r\n                                  // 'default' means that the dropdown toggles on hover and on click too\r\n                                  // 'disable' disables dropdown toggling with clicking when mouse is detected\r\n                                  //  'sticky' means if we click on an opened dropdown then it will not hide on\r\n                                  //           mouseleave but on a second click only\r\n        hideTimeout: 200\r\n      },\r\n      _hideTimeoutHandler,\r\n      _hardOpened = false,\r\n      _touchstartDetected = false,\r\n      _mouseDetected = false;\r\n\r\n  // The actual plugin constructor\r\n  function BootstrapDropdownHover(element, options) {\r\n    this.element = $(element);\r\n    this.settings = $.extend({}, defaults, options);\r\n    this._defaults = defaults;\r\n    this._name = pluginName;\r\n    this.init();\r\n  }\r\n\r\n  function bindEvents(dropdown) {\r\n    $('body').one('touchstart.dropdownhover', function() {\r\n      _touchstartDetected = true;\r\n    });\r\n\r\n    $('body').one('mouseenter.dropdownhover', function() {\r\n      // touchstart fires before mouseenter on touch devices\r\n      if (!_touchstartDetected) {\r\n        _mouseDetected = true;\r\n      }\r\n    });\r\n\r\n    $('.dropdown-toggle, .dropdown-menu', dropdown.element.parent()).on('mouseenter.dropdownhover', function () {\r\n      // seems to be a touch device\r\n      if(_mouseDetected && !$(this).is(':hover')) {\r\n        _mouseDetected = false;\r\n      }\r\n\r\n      if (!_mouseDetected) {\r\n        return;\r\n      }\r\n\r\n      clearTimeout(_hideTimeoutHandler);\r\n      if (!dropdown.element.parent().hasClass('open')) {\r\n        _hardOpened = false;\r\n        dropdown.element.dropdown('toggle');\r\n      }\r\n    });\r\n\r\n    $('.dropdown-toggle, .dropdown-menu', dropdown.element.parent()).on('mouseleave.dropdownhover', function () {\r\n      if (!_mouseDetected) {\r\n        return;\r\n      }\r\n\r\n      if (_hardOpened) {\r\n        return;\r\n      }\r\n      _hideTimeoutHandler = setTimeout(function () {\r\n        if (dropdown.element.parent().hasClass('open')) {\r\n          dropdown.element.dropdown('toggle');\r\n        }\r\n      }, dropdown.settings.hideTimeout);\r\n    });\r\n\r\n    dropdown.element.on('click.dropdownhover', function (e) {\r\n      if (!_mouseDetected) {\r\n        return;\r\n      }\r\n\r\n      switch(dropdown.settings.clickBehavior) {\r\n        case 'default':\r\n          return;\r\n        case 'disable':\r\n          e.preventDefault();\r\n          e.stopImmediatePropagation();\r\n          break;\r\n        case 'sticky':\r\n          if (_hardOpened) {\r\n            _hardOpened = false;\r\n          }\r\n          else {\r\n            _hardOpened = true;\r\n            if (dropdown.element.parent().hasClass('open')) {\r\n              e.stopImmediatePropagation();\r\n              e.preventDefault();\r\n            }\r\n          }\r\n          return;\r\n      }\r\n    });\r\n  }\r\n\r\n  function removeEvents(dropdown) {\r\n    $('.dropdown-toggle, .dropdown-menu', dropdown.element.parent()).off('.dropdownhover');\r\n    // seems that bootstrap binds the click handler twice after we reinitializing the plugin after a destroy...\r\n    $('.dropdown-toggle, .dropdown-menu', dropdown.element.parent()).off('.dropdown');\r\n    dropdown.element.off('.dropdownhover');\r\n    $('body').off('.dropdownhover');\r\n  }\r\n\r\n  BootstrapDropdownHover.prototype = {\r\n    init: function () {\r\n      this.setClickBehavior(this.settings.clickBehavior);\r\n      this.setHideTimeout(this.settings.hideTimeout);\r\n      bindEvents(this);\r\n      return this.element;\r\n    },\r\n    setClickBehavior: function(value) {\r\n      this.settings.clickBehavior = value;\r\n      return this.element;\r\n    },\r\n    setHideTimeout: function(value) {\r\n      this.settings.hideTimeout = value;\r\n      return this.element;\r\n    },\r\n    destroy: function() {\r\n      clearTimeout(_hideTimeoutHandler);\r\n      removeEvents(this);\r\n      this.element.data('plugin_' + pluginName, null);\r\n      return this.element;\r\n    }\r\n  };\r\n\r\n  // A really lightweight plugin wrapper around the constructor,\r\n  // preventing against multiple instantiations\r\n  $.fn[pluginName] = function (options) {\r\n    var args = arguments;\r\n\r\n    // Is the first parameter an object (options), or was omitted, instantiate a new instance of the plugin.\r\n    if (options === undefined || typeof options === 'object') {\r\n      // This allows the plugin to be called with $.fn.bootstrapDropdownHover();\r\n      if (!$.contains(document, $(this)[0])) {\r\n        $('[data-toggle=\"dropdown\"]').each(function (index, item) {\r\n          // For each nested select, instantiate the plugin\r\n          $(item).bootstrapDropdownHover(options);\r\n        });\r\n      }\r\n      return this.each(function () {\r\n        // If this is not a select\r\n        if (!$(this).hasClass('dropdown-toggle') || $(this).data('toggle') !== 'dropdown') {\r\n          $('[data-toggle=\"dropdown\"]', this).each(function (index, item) {\r\n            // For each nested select, instantiate the plugin\r\n            $(item).bootstrapDropdownHover(options);\r\n          });\r\n        } else if (!$.data(this, 'plugin_' + pluginName)) {\r\n          // Only allow the plugin to be instantiated once so we check that the element has no plugin instantiation yet\r\n\r\n          // if it has no instance, create a new one, pass options to our plugin constructor,\r\n          // and store the plugin instance in the elements jQuery data object.\r\n          $.data(this, 'plugin_' + pluginName, new BootstrapDropdownHover(this, options));\r\n        }\r\n      });\r\n\r\n      // If the first parameter is a string and it doesn't start with an underscore or \"contains\" the `init`-function,\r\n      // treat this as a call to a public method.\r\n    } else if (typeof options === 'string' && options[0] !== '_' && options !== 'init') {\r\n\r\n      // Cache the method call to make it possible to return a value\r\n      var returns;\r\n\r\n      this.each(function () {\r\n        var instance = $.data(this, 'plugin_' + pluginName);\r\n        // Tests that there's already a plugin-instance and checks that the requested public method exists\r\n        if (instance instanceof BootstrapDropdownHover && typeof instance[options] === 'function') {\r\n          // Call the method of our plugin instance, and pass it the supplied arguments.\r\n          returns = instance[options].apply(instance, Array.prototype.slice.call(args, 1));\r\n        }\r\n      });\r\n\r\n      // If the earlier cached method gives a value back return the value,\r\n      // otherwise return this to preserve chainability.\r\n      return returns !== undefined ? returns : this;\r\n    }\r\n\r\n  };\r\n\r\n})(jQuery, window, document);\r\n"]}